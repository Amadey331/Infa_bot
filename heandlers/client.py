
from aiogram import types,Dispatcher
from createBot import dp,bot,weather_token
from heandlers.admin import FSMAdmin

from kayboards import kb_client,kb_crypto,inline_ex,kb_select_week,kb_geo,kb_replace,kb_replaceLes
from kayboards import admin_kb

from aiogram.types import ReplyKeyboardMarkup
from aiogram.types import ReplyKeyboardRemove

from aiogram.dispatcher.filters import Text
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State,StatesGroup
from aiogram.dispatcher.filters import Text

    

from py_script.translate_en_ru import translate_en_ru
from py_script.get_weather import get_weather
from py_script.get_crypt import getCryptoInfo
from py_script.create_bd import create_bdL
from py_script.show_les import send_les
from py_script.chech_add_bd_users import chech_userId_bd_geo,add_toBase_user_geo,get_geo,update_userGeo,add_to_bd_user,chech_userId_bd_group,add_group_bd,get_group_from_bd,chech_group_is_real






# –ö–ª–∞—Å—Å –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–∫–∞–∑–∞ —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏—è 
class FSMShowLes(StatesGroup):
    group_add_bd = State()
    what_doL = State()
    wek_pos = State()

# –ö–ª–∞—Å—Å –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ–≥–æ–¥—ã 
class FSMShowWeather(StatesGroup):
    what_do = State()
    user_id = State()
    
# –ö–ª–∞—Å—Å –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ. –æ –∫—Ä–∏–ø—Ç–µ
class FSMShowCrypto(StatesGroup):
    coin_name = State()

class FSMgetdoc_a(StatesGroup):
    get_doc= State()


#@dp.message_handler(commands=["start","help"])
async def start_clientCommands(message:types.Message):
    # try:
    await add_to_bd_user(message)
    await bot.send_message(message.from_user.id,"–ö–æ–º–º–∞–Ω–¥—ã:", reply_markup=kb_client)
    await message.delete()
    # except:
    #     await message.reply("–û–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ, –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—Ç–µ –µ–º—É –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ(—Å—Å—ã–ª–∫–∞-https://t.me/GoInfo331_bot)")

# .......................................................................–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç............................................

# @dp.message_handler(commands=['–ó–∞–≥—Ä—É–∑–∏—Ç—å'])
async def get_docx(message:types.Message):   
    if message.from_user.id==896957462:
        await FSMgetdoc_a.get_doc.set()
        await bot.send_message(message.from_user.id,"–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç", reply_markup=ReplyKeyboardRemove())
        await bot.send_message(message.from_user.id,"–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É",reply_markup=inline_ex)
    else:
        await bot.send_message(message.from_user.id,"–¢—ã –Ω–µ –∞–¥–º–∏–Ω!!!ü§¨ü§¨ü§¨",reply_markup=kb_client)
    

# @dp.message_handler( content_types="document",state=FSMgetdoc_a.get_doc,)
async def downloadDoc(message:types.Message,state:FSMContext):
    # try:
    
    file=await bot.get_file(message.document.file_id)
    await bot.download_file(file.file_path,r'py_script/les.xlsx')
    await create_bdL()
    await bot.send_message(message.from_user.id,'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!‚úÖ‚úÖ‚úÖ',reply_markup=kb_client)
    await state.finish()
        

    # except:
    #     await bot.send_message(message.from_user.id,'–û—à–∏–±–∫–∞ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Ñ–∞–π–ª–∞')


# ........................................................................–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ..............................................
#@dp.message_handler(commands=["/–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ üóì"])
async def get_group(message:types.Message):
    
    if  await chech_userId_bd_group(message):
    
        await bot.send_message(message.from_user.id,"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–π",reply_markup=kb_replaceLes)
        await FSMShowLes.what_doL.set()

    else:
        await FSMShowLes.group_add_bd.set()
        
        await bot.send_message(message.from_user.id,"–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã",reply_markup=inline_ex)
        
        

# #@dp.message_handler(state=FSMShowLes.what_doL)
async def what_do_group(message:types.Message,state : FSMContext):
    if message.text in ('–ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä—É–ø–ø—É –ø–æ –ø—Ä–µ–¥—ã–¥—É—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É',"–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã"):
        if message.text =="–ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä—É–ø–ø—É –ø–æ –ø—Ä–µ–¥—ã–¥—É—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É":
            await FSMShowLes.wek_pos.set()        
            await bot.send_message(message.from_user.id,"–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞–∫—É—é –Ω–µ–¥–µ–ª—é –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å",reply_markup=kb_select_week)
        else:
            await bot.send_message(message.from_user.id,"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ ")
            await FSMShowLes.group_add_bd.set()
    else:
        await bot.send_message(message.from_user.id,"–¢—ã —á—ë –∫–Ω–æ–ø–∫–∏ –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–∞–∂–∞—Ç—å? –¢–≤–æ—è –æ—à–∏–±–∫–∞!!!üñïüñïüñï",reply_markup=kb_client)
        await state.finish() 




# #@dp.message_handler(state=FSMShowLes.group_ad_bd)
async def add_bd_group(message:types.Message,state:FSMContext):
    if await chech_group_is_real(message):
        await add_group_bd(message)
        await bot.send_message(message.from_user.id,"–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞–∫—É—é –Ω–µ–¥–µ–ª—é –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å",reply_markup=kb_select_week)
        await FSMShowLes.wek_pos.set()
    else:
        await state.finish()
        await bot.send_message(message.from_user.id,"–í–≤–µ–¥–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∏–ª–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—è—è –≥—Ä—É–ø–ø–∞!!!",reply_markup= kb_client)
# dp.message_heandler (state=FSMShowLes.wek_pos)
async def echo_lessen(message:types.Message,state:FSMContext):
    if message.text in ('–í–µ—Ä—Ö–Ω—è—è –Ω–µ–¥–µ–ª—è ‚¨ÜÔ∏è',"–ù–∏–∂–Ω—è—è –Ω–µ–¥–µ–ª—è ‚¨áÔ∏è"):
        await send_les(await get_group_from_bd(message),message.text,message,)
        await state.finish()
    else:
        await bot.send_message(message.from_user.id,"–¢—ã —á—ë –∫–Ω–æ–ø–∫–∏ –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–∞–∂–∞—Ç—å? –¢–≤–æ—è –æ—à–∏–±–∫–∞!!!üñïüñïüñï",reply_markup=kb_client)
        await state.finish() 





# .....................................................................–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É..............................................
# @dp.message_heandler(commands = ['–ü–æ–∫–∞–∑–∞—Ç—å_–ø–æ–≥–æ–¥—Éüå¶'])
async def get_id_forWeather(message:types.Message):

    if  await chech_userId_bd_geo(message): 
    
        await bot.send_message(message.from_user.id,"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ",reply_markup=kb_replace)
        await FSMShowWeather.what_do.set()

    else:
        await FSMShowWeather.user_id.set()
        await bot.send_message(message.from_user.id,"–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ",reply_markup=kb_geo)
    

# @dp.message_handler(state= FSMShowWeather.what_do)
async def rep_or_echo(message:types.Message, state:FSMContext):
    if message.text in("–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É –ø–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é","–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"):

    
        try:
        
            if message.text=="–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É –ø–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é":
                await get_weather(await get_geo(message),message,)
                await state.finish()
            else:
                await bot.send_message(message.from_user.id,"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ" ,reply_markup=kb_geo)
                await FSMShowWeather.user_id.set()
        except:
            await bot.send_message(message.from_user.id,"–¢–≤–æ—è –æ—à–∏–±–∫–∞!!!üñïüñïüñï",reply_markup=kb_client) 

    else:

        await bot.send_message(message.from_user.id,"–¢—ã —á—ë –∫–Ω–æ–ø–∫–∏ –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–∞–∂–∞—Ç—å? –¢–≤–æ—è –æ—à–∏–±–∫–∞!!!üñïüñïüñï",reply_markup=kb_client)
        await state.finish()

# @dp.message_heandler(state=FSMShowWeather.user_id)
async def echo_weather(message:types.Message, state:FSMContext):
    try:
        if  await chech_userId_bd_geo(message):
            await update_userGeo(message)
            await get_weather(await get_geo(message),message)
            await state.finish()
        else:
            await add_toBase_user_geo(message)
            await get_weather(await get_geo(message),message)
            await state.finish()
    except:
        await bot.send_message(message.from_user.id,"–¢–≤–æ—è –æ—à–∏–±–∫–∞, —É–µ–±–∞–Ω!!!üñïüñïüñï",reply_markup=kb_client) 
# ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ –æ –∫—Ä–∏–ø—Ç–µ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,

# @dp.message_handler(commands= ["–ü–æ–∫–∞–∑–∞—Ç—å_–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é_–ø–æ_–º–æ–Ω–µ—Ç–µ"])
async def get_coinName(message:types.Message):
    await bot.send_message(message.from_user.id,"–°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–æ–Ω–µ—Ç (–µ—Å–ª–∏ –∑–Ω–∞–µ—Ç–µ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∂–µ–ª–∞–µ–º—É—é –º–æ–Ω–µ—Ç—É)",reply_markup=kb_crypto)
    await FSMShowCrypto.coin_name.set()


#@dp.message_heandler(state=FSMShowCrypto.coin)
async def echo_coinInfo(message:types.Message, state=FSMContext):
    await getCryptoInfo(message.text,message)
    await state.finish()







# ...............................................................–û—Ç–º–µ–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è........................................
# dp.message_handler(state='*',commands="–æ—Ç–º–µ–Ω–∞") # State –æ–∑–Ω–æ—á–∞–µ–Ω —á—Ç–æ –≤ –∫–∞–∫–æ–º –±—ã —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –±—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏–ª–∞—Å—å –≤—Å–µ–≥–¥–∞ –ª–æ–≤–∏—Ç—å 
# dp.message_handler(Text( equals="–æ—Ç–º–µ–Ω–∞", ignore_case=True),state='*')  # Text —Ñ–∏–ª—å—Ç—Ä —Ç–µ—Å—Ç–∞ —Ç–æ–µ—Å—Ç—å –∫–∞–∫ –±—ã –Ω–µ –Ω–∞–ø–∏—Å–∞–ª –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–π–¥—ë—Ç

async def exit_FSM(message:types.Message, state= FSMContext):
    await state.finish()
    await bot.send_message(message.from_user.id,'–í–æ–∑–≤—Ä–∞—Ç',reply_markup=kb_client)
    
# –î–ª—è –æ–ª–∞–≤–ª–∏–≤–∞–Ω–∏—è –∫–∞–ª–±–µ–∫–∞ –∏–∑ –≤—ã—Ö–æ–¥–∞ –ø–æ–≥–æ–¥—ã

# @dp.callback_query_handler(lambda c: c=="‚ùå")
async def exit_callback_weather_bt(callback_query: types.CallbackQuery, state=FSMContext):
    
    await state.finish()
    await bot.send_message(callback_query.from_user.id,'–í–æ–∑–≤—Ä–∞—Ç',reply_markup=kb_client)


# ....................................................................–í —Å–ª—É—á–∞–µ –µ—Å—Å–ª–∏ –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç—É................................................
#dp.message_handler()
async def noCommand(message:types.Message):
    await message.answer("–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç, –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help")
    await message.delete()


    


def heandler_regClient(dp:Dispatcher):
    dp.register_message_handler(start_clientCommands,commands=["start","help"])
    dp.register_message_handler(exit_FSM, lambda message:message.text=="‚ùå", state="*")
    dp.register_callback_query_handler( exit_callback_weather_bt , lambda c: c.data=="return",state="*")
    dp.register_message_handler(get_group,lambda message:message.text == "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µüóì", state=None) # 
    dp.register_message_handler(what_do_group,state=FSMShowLes.what_doL)
    dp.register_message_handler(add_bd_group,state=FSMShowLes.group_add_bd)
    dp.register_message_handler(echo_lessen,state=FSMShowLes.wek_pos)
    dp.register_message_handler(get_id_forWeather,lambda message: message.text == "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—Éüå¶",state=None)
    dp.register_message_handler(rep_or_echo,state=FSMShowWeather.what_do)
    dp.register_message_handler(echo_weather,content_types="location",state = FSMShowWeather.user_id)
    dp.register_message_handler(get_coinName, lambda message : message.text == "–ò–Ω—Ñ–æ—Ä–∞–º–∞—Ü–∏—è –æ –º–æ–Ω–µ—Ç–µüíé" ,state=None)
    dp.register_message_handler(echo_coinInfo,state = FSMShowCrypto.coin_name)
    dp.register_message_handler(get_docx,lambda message:message.text =="–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
    dp.register_message_handler(downloadDoc,content_types="document",state=FSMgetdoc_a.get_doc)
    dp.register_message_handler(noCommand)